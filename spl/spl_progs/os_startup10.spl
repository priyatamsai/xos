load(7,1);//exception
load(8,2);


alias counter S0;			
counter = 0;
while ( counter <  128) do			// 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;	// Set FAT Index to -1
	[ FILE_TABLE + counter + 1] =  0;	// Set File Open Count to 0
	counter = counter + 2;			// Move to next entry
endwhile;


[READY_LIST +0]=0;
[READY_LIST+31]=-1;///ppid of init set to -1


//load(25,21); // Load 1st page of code from disk to memory///////////////init
//load(26,22); // Load 2nd page of code from disk to memory
//load(27,23);

load (11, 5);//int 1
load (12, 6);

load (13, 7);//int 2
load (14, 8);
load (15, 9);//int 3
load (16, 10);
load (17, 11);//int 4
load (18, 12);
load (19, 13);//int 5
load (20, 14);

load (21, 15);//int 6
load (22, 16);

load(23,17);//int=7
load(24,18);


load (9, 3);//timer
load (10, 4);

PTBR = 1024;
PTLR=4;

[PTBR + 0] = 21; // Physical Page Number for Logical Page 0
[PTBR + 1] = "00";
[PTBR + 2] = 22; // Physical Page Number for Logical Page 0
[PTBR + 3] = "00";
[PTBR + 4] = 23; // Physical Page Number for Logical Page 0
[PTBR + 5] = "00";
[PTBR + 6] = 25; // Physical Page Number for Logical Page 0
[PTBR + 7] = "01";
[READY_LIST + 1] = 2;

alias currentPCB S1;
currentPCB=READY_LIST;

while(currentPCB<READY_LIST+32*32)do  	//need to initialize to all pcbs ppft but no prob with this as well
	alias ind S2;
	//////////setting ppoft entries to -1 in pcb
	ind=15;
	while(ind<=30)do
		[currentPCB+ind]=-1;
		ind=ind+1;
	endwhile;
	currentPCB=currentPCB+32;
endwhile;

load(5,19);//fat copy
load(6,20);//disk free list 



alias i S3;
i=1280;	///memory free list updation.


while(i<=1280+25)do
	[i]=1;
	i=i+1;
endwhile;
while(i<=1280+63)do
	[i]=0;
	i=i+1;
endwhile;

///////////////// dont forgot to fill swap areas to unassigned in dfl
i=DISK_LIST+448;

while(i<DISK_LIST+512)do
	[i]=0;
	i=i+1;
endwhile;

store(6,20);//storing back dfl

SP = 3 * 512;
[28*512]=0;



ireturn;

