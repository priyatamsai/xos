load(7,1);//eception
load(8,2);

load(23,17);//int=7
load(24,18);
[READY_LIST +0]=0;

load(25,21); // Load 1st page of code from disk to memory///////////////init
load(26,22); // Load 2nd page of code from disk to memory
load(27,23);

load (11, 5);//int 1
load (12, 6);

load (19, 13);//int 5
load (20, 14);

load (9, 3);//timer
load (10, 4);

PTBR = 1024;
PTLR=4;

[PTBR + 0] = 25; // Physical Page Number for Logical Page 0
[PTBR + 1] = "01";
[PTBR + 2] = 26; // Physical Page Number for Logical Page 0
[PTBR + 3] = "01";
[PTBR + 4] = 27; // Physical Page Number for Logical Page 0
[PTBR + 5] = "01";
[PTBR + 6] = 28; // Physical Page Number for Logical Page 0
[PTBR + 7] = "01";
[READY_LIST + 1] = 2;

alias i S3;
i=1280;
while(i<=1280+28)do
	[i]=1;
	i=i+1;
endwhile;
while(i<=1280+63)do
	[i]=0;
	i=i+1;
endwhile;


SP = 3 * 512;
[28*512]=0;

/////upto here old code 

[READY_LIST + 32] = 1; // Sets the entry for PID as 1
load(29,25 );
 alias PTBR_Process1 S0;
PTBR_Process1 = 1024 + 1 * 8;

[PTBR_Process1 + 0] = 29; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 1] = "01";
[PTBR_Process1 + 2] = -1; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 3] = "00";
[PTBR_Process1 + 4] = -1; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 5] = "00";
[PTBR_Process1 + 6] = 30; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 7] = "01";

[READY_LIST + 33] = 1; // STATE is READY
[READY_LIST + 37] = PTBR_Process1; // PTBR
[READY_LIST + 38] = 4; // PTLR

[READY_LIST + 34] = 3 * 512; // Sets the entry for BP in the PCB
[READY_LIST + 35] = 3 * 512; // Sets the entry for SP in the PCB

[READY_LIST + 36] = 0; // Sets the entry for IP to logical address 0 in the PCB 

i=READY_LIST+2*32;
while(i<2560)do
	[i+1]=0;
	i=i+32;
endwhile;


ireturn;

